
#include "stm32f4xx.h"
#include "stm32f4_discovery.h"

TIM_TimeBaseInitTypeDef TIM_InitStruct; // Timer structure yapýsý

void Timer_Config()
{
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);

	TIM_InitStruct.TIM_ClockDivision = TIM_CKD_DIV1;
	TIM_InitStruct.TIM_CounterMode = TIM_CounterMode_Up; // Timer'ýn hangi yönde sayacaðýný belirler.
	TIM_InitStruct.TIM_Period = 9999; // AutoReload deðeri. Timer'ýn kaça kadar sayacaðýný gösterir.
	TIM_InitStruct.TIM_Prescaler = 0x0000;
	TIM_InitStruct.TIM_RepetitionCounter = 0;  // Her bir taþmada tekrar etmesini saðlar. Her 9999'da bir kere. (0 yazmak onun 1 olduðu anlamýna gelir.)

}

int main(void)
{
	Timer_Config();

  while (1)
  {

  }
}


/*
 * Callback used by stm32f4_discovery_audio_codec.c.
 * Refer to stm32f4_discovery_audio_codec.h for more info.
 */
void EVAL_AUDIO_TransferComplete_CallBack(uint32_t pBuffer, uint32_t Size){
  /* TODO, implement your code here */
  return;
}

/*
 * Callback used by stm324xg_eval_audio_codec.c.
 * Refer to stm324xg_eval_audio_codec.h for more info.
 */
uint16_t EVAL_AUDIO_GetSampleCallBack(void){
  /* TODO, implement your code here */
  return -1;
}
